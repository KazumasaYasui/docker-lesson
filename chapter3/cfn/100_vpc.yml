AWSTemplateFormatVersion: "2010-09-09"

Description:
  Create VPC

Parameters:
  Env:
    Type: String
    AllowedValues:
      - production
      - staging

  Service:
    Type: String
    Default: "sampleapp"

  VpcCidrBlock:
    Type: String
    Default: "10.0.0.0/16"

  PublicSubnet01CidrBlock:
    Type: String
    Default: "10.0.10.0/24"

  PublicSubnet02CidrBlock:
    Type: String
    Default: "10.0.11.0/24"

  PrivateSubnet01CidrBlock:
    Type: String
    Default: "10.0.100.0/24"

  PrivateSubnet02CidrBlock:
    Type: String
    Default: "10.0.101.0/24"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-vpc"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-internet-gateway"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet01:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !Ref PublicSubnet01CidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-public-subnet-01"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PublicSubnet02:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !Ref PublicSubnet02CidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-public-subnet-02"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PrivateSubnet01:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !Ref PrivateSubnet01CidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-private-subnet-01"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PrivateSubnet02:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !Ref PrivateSubnet02CidrBlock
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-private-subnet-02"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PublicSubnet01RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-public-subnet01-route-table"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PublicSubnet02RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-public-subnet02-route-table"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PrivateSubnet01RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-private-subnet01-route-table"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PrivateSubnet02RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-private-subnet02-route-table"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  Subnet01NatEip:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway01:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - Subnet01NatEip
          - AllocationId
      SubnetId: !Ref PublicSubnet01
      Tags:
        - Key: Name
          Value: !Sub "${Service}-${Env}-nat-gateway01"
        - Key: Env
          Value: !Sub "${Env}"
        - Key: Service
          Value: !Sub "${Service}"

  PublicSubnet01Route:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicSubnet01RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PublicSubnet02Route:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicSubnet02RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PrivateSubnet01Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnet01RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway01

  PrivateSubnet02Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnet02RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway01

  PublicSubnet01RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicSubnet01RouteTable

  PublicSubnet02RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicSubnet02RouteTable

  PrivateSubnet01RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet01
      RouteTableId: !Ref PrivateSubnet01RouteTable

  PrivateSubnet02RouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PrivateSubnet02
      RouteTableId: !Ref PrivateSubnet02RouteTable

Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub "${Service}-${Env}-vpc"

  PublicSubnet01:
    Value: !Ref PublicSubnet01
    Export:
      Name: !Sub "${Service}-${Env}-public-subnet-01"

  PublicSubnet02:
    Value: !Ref PublicSubnet02
    Export:
      Name: !Sub "${Service}-${Env}-public-subnet-02"

  PrivateSubnet01:
    Value: !Ref PrivateSubnet01
    Export:
      Name: !Sub "${Service}-${Env}-private-subnet-01"

  PrivateSubnet02:
    Value: !Ref PrivateSubnet02
    Export:
      Name: !Sub "${Service}-${Env}-private-subnet-02"
